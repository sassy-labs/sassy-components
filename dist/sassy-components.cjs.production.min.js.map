{"version":3,"file":"sassy-components.cjs.production.min.js","sources":["../src/themes/light.ts","../src/themes/dark.ts","../src/util/generatePalette.ts","../src/themes/core.ts","../src/components/icon/styles.ts","../src/components/icon/Icon.tsx","../src/components/iconButton/styles.ts","../src/components/iconButton/IconButton.tsx","../src/components/alert/styles.ts","../src/components/alert/Alert.tsx","../src/themes/SassyThemeProvider.tsx"],"sourcesContent":["export default {};\n","export default { mode: 'dark', backgroundColor: 'black', color: 'white' };\n","const generatePalette = (\n  hue: number,\n  saturation: number\n): {\n  [key: string]: string | number;\n} => {\n  const palette: { [key: string]: string | number } = {};\n  for (let i = 0; i <= 95; i += 5) {\n    palette[i] = hsl(hue, saturation, i);\n  }\n  palette['hue'] = hue;\n  palette['saturation'] = saturation;\n  return palette;\n};\n\nconst hsl = (h: number, s: number, l: number): string =>\n  `hsl(${h},${s}%,${l}%)`;\n\nexport { generatePalette as default };\n","import generatePalette from '../util/generatePalette';\n\nconst ColorTokens = {\n  colors: {\n    primary: generatePalette(203, 100),\n    success: generatePalette(110, 70),\n    info: generatePalette(203, 10),\n    warning: generatePalette(40, 90),\n    danger: generatePalette(10, 95),\n    gray: generatePalette(203, 10),\n    white: `white`,\n    black: `black`\n  }\n};\n\nconst BorderRadiusTokens = {\n  borderRadiusSmall: `0.125rem`,\n  borderRadiusMedium: `0.25rem`,\n  borderRadiusLarge: `0.5rem`,\n  borderRadiusXLarge: `1rem`,\n  borderRadiusCircle: `50%`,\n  borderRadiusPill: `9999px`\n};\n\nconst ElevationTokens = {\n  shadowXSmall: `0 1px 0 rgba(0, 0, 0, 0.05)`,\n  shadowSmall: `0 1px 2px rgba(0, 0, 0, 0.1)`,\n  shadowMedium: `0 2px 4px rgba(0, 0, 0, 0.1)`,\n  shadowLarge: `0 2px 8px rgba(0, 0, 0, 0.1)`,\n  shadowXLarge: `0 4px 16px rgba(0, 0, 0, 0.1)`\n};\n\nconst SpacingTokens = {\n  spacingXXXSmall: `0.125rem`,\n  spacingXXSmall: `0.25rem`,\n  spacingXSmall: `0.5rem`,\n  spacingSmall: `0.75rem`,\n  spacingMedium: `1rem `,\n  spacingLarge: `1.25rem`,\n  spacingXLarge: `1.75rem`,\n  spacingXXLarge: `2.25rem`,\n  spacingXXXLarge: `3rem `,\n  spacingXXXXLarge: `4.5rem`\n};\n\nconst TransitionTokens = {\n  transitionXSlow: `1000ms`,\n  transitionSlow: `500ms`,\n  transitionMedium: `250ms`,\n  transitionFast: `150ms`,\n  transitionXFast: `50ms`\n};\n\nconst TypographyTokens = {\n  // font families\n  fontMono: `'SFMono Regular', Consolas, 'Liberation Mono', Menlo, monospace`,\n  fontSans: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'`,\n  fontSerif: `Georgia, 'Times New Roman', serif`,\n  // font sizes\n  fontSizeXXSmall: `0.625rem`,\n  fontSizeXSmall: `0.75rem`,\n  fontSizeSmall: `0.875rem`,\n  fontSizeMedium: `1rem`,\n  fontSizeLarge: `1.25rem`,\n  fontSizeXLarge: `1.5rem`,\n  fontSizeXXLarge: `2.25rem`,\n  fontSizeXXXLarge: `3rem`,\n  fontSizeXXXXLarge: `4.5rem`,\n  // font weights\n  fontWeightLight: 300,\n  fontWeightNormal: 400,\n  fontWeightSemibold: 500,\n  fontWeightBold: 700,\n  // letter spacings\n  letterSpacingDense: `-0.015em`,\n  letterSpacingNormal: `normal`,\n  letterSpacingLoose: `0.075em`,\n  // line heights\n  lineHeightDense: `1.4`,\n  lineHeightNormal: `1.8`,\n  lineHeightLoose: `2.2`\n};\n\nexport default {\n  ...ColorTokens,\n  ...TransitionTokens,\n  ...BorderRadiusTokens,\n  ...ElevationTokens,\n  ...SpacingTokens,\n  ...TypographyTokens\n};\n","import styled, { css } from 'styled-components';\n\nexport const StyledIcon = styled.div<{\n  width?: string;\n  height?: string;\n  color?: string;\n}>`\n  display: inline-block;\n  contain: strict;\n  box-sizing: content-box !important;\n\n  ${({ width = '1em', height = '1em', color = 'currentColor' }) => css`\n    width: ${width};\n    height: ${height};\n    color: ${color};\n  `}\n`;\n\nexport const Svg = styled.svg`\n  display: block;\n  height: 100%;\n  width: 100%;\n`;\n","import React from 'react';\nconst icons = require('./bootstrap-icons.svg') as string;\nimport { StyledIcon, Svg } from './styles';\n\nexport interface Props extends React.HTMLAttributes<HTMLOrSVGElement> {\n  name?: string;\n  width?: string;\n  height?: string;\n  color?: string;\n  src?: string;\n  label?: string;\n}\n\nexport const Icon: React.FC<Props> = ({\n  name,\n  width = '1em',\n  height = '1em',\n  color = 'currentColor',\n  src,\n  label = `${name?.replaceAll(/\\-/g, ' ')} icon`,\n  ...otherProps\n}) => {\n  if (!name && !src)\n    throw new Error('At least name or src for Icon must be defined');\n\n  return (\n    <StyledIcon\n      width={width}\n      height={height}\n      color={color}\n      aria-label={label}\n      {...otherProps}\n    >\n      <Svg>\n        {src ? <use href={src} /> : <use href={`./${icons}#${name}`} />}\n      </Svg>\n    </StyledIcon>\n  );\n};\n","import styled, { css } from 'styled-components';\n\nexport const StyledIconButton = styled.button`\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  background: none;\n  border: none;\n  font-size: inherit;\n  cursor: pointer;\n  -webkit-appearance: none;\n\n  ${({ theme: { sassy }, disabled }) => css`\n    border-radius: ${sassy.borderRadiusMedium};\n    color: ${sassy.colors.gray[50]};\n    padding: ${sassy.spacingXSmall};\n    transition: color ${sassy.transitionMedium};\n\n    ${!disabled &&\n      css`\n        &:hover,\n        &:focus {\n          color: ${sassy.colors.primary[50]};\n        }\n\n        &:active {\n          color: ${sassy.colors.primary[40]};\n        }\n      `}\n  `}\n\n  &:focus {\n    outline: none;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n","import React from 'react';\nimport { Icon } from '../icon/Icon';\n\nimport { StyledIconButton } from './styles';\n\nexport interface Props extends React.HTMLAttributes<HTMLButtonElement> {\n  name?: string;\n  src?: string;\n  label?: string;\n  disabled?: boolean;\n}\n\nexport const IconButton: React.FC<Props> = ({\n  name,\n  src,\n  label,\n  disabled = false,\n  ...otherProps\n}) => {\n  if (!name && !src)\n    throw new Error('At least name or src for IconButton must be defined');\n\n  return (\n    <StyledIconButton\n      type=\"button\"\n      disabled={disabled}\n      {...otherProps}\n      role=\"button\"\n    >\n      <Icon name={name} src={src} label={label} />\n    </StyledIconButton>\n  );\n};\n","import styled, { css } from 'styled-components';\nimport { Variant } from '../../util/Variant.type';\n\nexport const AlertIcon = styled.span`\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  ${({ theme: { sassy } }) => css`\n    font-size: ${sassy.fontSizeLarge};\n    margin-left: ${sassy.spacingLarge};\n  `}\n`;\n\nexport const AlertMessage = styled.span`\n  flex: 1 1 auto;\n  overflow: hidden;\n  ${({ theme: { sassy } }) => css`\n    padding: ${sassy.spacingLarge};\n  `}\n`;\n\nexport const AlertClose = styled.span`\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  ${({ theme: { sassy } }) => css`\n    font-size: ${sassy.fontSizeLarge};\n    padding-right: ${sassy.spacingMedium};\n  `}\n`;\n\nexport const StyledAlert = styled.div<{ variant: Variant }>`\n  position: relative;\n  display: flex;\n  align-items: stretch;\n  box-shadow: none;\n  line-height: 1.6;\n  opacity: 0;\n  transform: scale(0.9);\n  ${({ theme: { sassy }, hidden, variant }) => {\n    if (!sassy)\n      throw new Error(\n        'Please mount the sassy theme provider at a higher place in the component tree'\n      );\n    return css`\n      background-color: ${sassy.colors.white};\n      border: solid 1px ${sassy.colors.gray[90]};\n      border-radius: ${sassy.borderRadiusMedium};\n      font-family: ${sassy.fontSans};\n      font-size: ${sassy.fontSizeSmall};\n      font-weight: ${sassy.fontWeightNormal};\n      color: ${sassy.colors.gray[30]};\n      transition: opacity ${sassy.transitionMedium} ease,\n        transform ${sassy.transitionMedium} ease;\n\n      border-top-color: ${sassy.colors[variant][50]};\n\n      & ${AlertIcon} {\n        color: ${sassy.colors[variant][50]};\n      }\n\n      ${!hidden && `opacity: 1; transform: scale(1);`}\n    `;\n  }}\n  border-top-width: 3px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Icon } from '../icon/Icon';\nimport { IconButton } from '../iconButton/IconButton';\n\nimport { Variant } from '../../util/Variant.type';\nimport { StyledAlert, AlertIcon, AlertMessage, AlertClose } from './styles';\n\nexport interface Props extends React.HTMLAttributes<HTMLDivElement> {\n  isOpen?: boolean;\n  isClosable?: boolean;\n  variant?: Variant;\n  duration?: number;\n  children?: React.ReactChild;\n  icon?: string;\n}\n\nexport const Alert: React.FC<Props> = ({\n  isOpen = true,\n  isClosable = true,\n  variant = 'primary',\n  duration = 5000,\n  icon,\n  children,\n  ...otherProps\n}) => {\n  const [autoHideTimeout, setAutoHideTimeout] = useState<number>();\n  const [isShowing, setIsShowing] = useState<boolean>(false);\n\n  const hide = (): void => {\n    setIsShowing(false);\n    clearTimeout(autoHideTimeout);\n  };\n\n  const restartAutoHide = (): void => {\n    if (autoHideTimeout !== undefined) clearTimeout(autoHideTimeout);\n    if (duration !== Infinity) setAutoHideTimeout(setTimeout(hide, duration));\n  };\n\n  const show = (): void => {\n    if (isOpen) {\n      restartAutoHide();\n      setIsShowing(true);\n    }\n  };\n\n  useEffect(() => {\n    show();\n    return () => clearTimeout(autoHideTimeout);\n  }, []);\n\n  if (!isOpen) return null;\n\n  return (\n    <StyledAlert\n      variant={variant}\n      hidden={!isShowing}\n      role=\"alert\"\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      aria-hidden={!isShowing}\n      onMouseMove={restartAutoHide}\n      {...otherProps}\n    >\n      {icon && (\n        <AlertIcon>\n          <Icon name={icon} />\n        </AlertIcon>\n      )}\n\n      <AlertMessage>{children}</AlertMessage>\n\n      {isClosable && (\n        <AlertClose onClick={hide}>\n          <IconButton name=\"x\" />\n        </AlertClose>\n      )}\n    </StyledAlert>\n  );\n};\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport LightMode from './light';\nimport DarkMode from './dark';\nimport core from './core';\n\nconst SassyContext = React.createContext({});\n\nexport interface SassyThemeProviderProps {\n  mode?: 'light' | 'dark';\n  theme?: any;\n  children?: React.ReactChild;\n}\n\nexport interface makeSassyChildInterface\n  extends React.ComponentClass<{ theme: any }> {}\n\nexport const makeSassy = (Child: makeSassyChildInterface) => ({ ...props }) => (\n  <SassyContext.Consumer>\n    {value => <Child theme={value} {...props} />}\n  </SassyContext.Consumer>\n);\n\nexport const SassyThemeProvider: React.FC<SassyThemeProviderProps> = ({\n  mode = 'light',\n  theme,\n  children\n}) => (\n  <ThemeProvider\n    theme={() => ({\n      sassy: {\n        ...(mode === 'light' ? LightMode : DarkMode),\n        ...theme,\n        ...core\n      }\n    })}\n  >\n    {children}\n  </ThemeProvider>\n);\n"],"names":["mode","backgroundColor","color","generatePalette","hue","saturation","palette","i","hsl","h","s","l","colors","primary","success","info","warning","danger","gray","white","black","transitionXSlow","transitionSlow","transitionMedium","transitionFast","transitionXFast","borderRadiusSmall","borderRadiusMedium","borderRadiusLarge","borderRadiusXLarge","borderRadiusCircle","borderRadiusPill","shadowXSmall","shadowSmall","shadowMedium","shadowLarge","shadowXLarge","spacingXXXSmall","spacingXXSmall","spacingXSmall","spacingSmall","spacingMedium","spacingLarge","spacingXLarge","spacingXXLarge","spacingXXXLarge","spacingXXXXLarge","fontMono","fontSans","fontSerif","fontSizeXXSmall","fontSizeXSmall","fontSizeSmall","fontSizeMedium","fontSizeLarge","fontSizeXLarge","fontSizeXXLarge","fontSizeXXXLarge","fontSizeXXXXLarge","fontWeightLight","fontWeightNormal","fontWeightSemibold","fontWeightBold","letterSpacingDense","letterSpacingNormal","letterSpacingLoose","lineHeightDense","lineHeightNormal","lineHeightLoose","StyledIcon","styled","div","width","height","css","Svg","svg","icons","require","Icon","name","src","label","replaceAll","otherProps","Error","React","href","StyledIconButton","button","sassy","theme","disabled","IconButton","type","role","AlertIcon","span","AlertMessage","AlertClose","StyledAlert","hidden","variant","isOpen","isClosable","duration","icon","children","useState","autoHideTimeout","setAutoHideTimeout","isShowing","setIsShowing","hide","clearTimeout","restartAutoHide","undefined","Infinity","setTimeout","useEffect","onMouseMove","onClick","ThemeProvider","LightMode","DarkMode","core"],"mappings":"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"}